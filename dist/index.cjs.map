{"version":3,"sources":["../src/index.ts","../src/renderSlot.ts"],"sourcesContent":["export type { Renderable } from './Renderable'\nexport { renderSlot } from './renderSlot'\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport isFunction from 'lodash.isfunction'\nimport isPlainObject from 'lodash.isplainobject'\n\nimport {\n\tComponentType,\n\tReactNode,\n\tcloneElement,\n\tcreateElement,\n\tisValidElement,\n\tReactElement,\n\tJSXElementConstructor,\n} from 'react'\n\nimport type { Renderable } from './Renderable'\n\n/**\n * Used alongside renderable type to enable partial and conditional rendering of\n * some JSX in a simpler and more conventional manner.\n *\n * @param bespokePart - Specific part to be rendered\n * @param defaultPart - The JSX part that will be rendered if \"true\" is passed\n * @param wrapperPart - Wrapper that might be used to be used with both bespokePart and defaultPart\n * @param optionsPart - Additional hints on how to render the slot\n *\n * @example\n * Having component:\n * function Component({ renderText }: { renderText: Renderable }) {\n *     return (\n *     \t <div>\n *     \t    {renderSlot(renderText, () => <Text>Default text</Text>, (part) => <Text>{part}</Text>)}\n *       </div>\n *     )\n * } or:\n *\n * renderSlot(renderText, () => <Text>Default text</Text>)\n * renderSlot(renderText, () => <Text>Default text</Text>, (part) => <Text>{part}</Text>)\n *\n * <Component renderText />\n *  => <Text>Default text</Text>\n *\n * <Component renderText={false} />\n *  => null\n *\n * renderSlot(true, () => <Text>Default text</Text>, (part) => <li>{part}</li>)\n *  => <li><Text>Default text</Text></li>\n *\n * renderSlot(<strong>Some text</strong>, () => <Text>Default text</Text>, (part) => <li>{part}</li>)\n *  => <li><strong>Some text</strong></li>\n *\n * renderSlot(() => <strong>Some text</strong>, () => <Text>Default text</Text>, (part) => <li>{part}</li>)\n *  => <li><strong>Some text</strong></li>\n *\n *  renderSlot((DefaultPart) => <strong><DefaultPart /></strong>, () => <Text>Default text</Text>, (part) => <li>{part}</li>)\n *  => <strong><Text>Default text</Text></strong>\n */\n\n// Accept functional component, class component, or element instance\nexport type DefaultLike<P extends Record<string, unknown>> =\n\t| ComponentType<P>\n\t| JSXElementConstructor<P>\n\t| ReactElement<P>\n\t| null\n\t| undefined\n\ntype PropsOfDefault<T> =\n\tT extends ComponentType<infer P>\n\t\t? P\n\t\t: T extends ReactElement<infer P>\n\t\t\t? P\n\t\t\t: T extends JSXElementConstructor<infer P>\n\t\t\t\t? P\n\t\t\t\t: Record<string, never>\n\ntype AllProps<\n\tD extends DefaultLike<any>,\n\tP extends Record<string, any> = PropsOfDefault<D>,\n\tC extends Record<string, unknown> = Record<string, unknown>,\n> = {\n\tbespoke: Renderable<P, C>\n\tdefault?: D\n\tcontext?: C\n\twrapper?: (part: ReactNode) => ReactNode\n\toptions?: { wrapNonElementWithDefault?: boolean }\n}\n\nexport function renderSlot<\n\tD extends DefaultLike<any>,\n\tP extends Record<string, any> = PropsOfDefault<D>,\n\tC extends Record<string, unknown> = Record<string, unknown>,\n>(\n\tbespoke: Renderable<P, C>,\n\tdefNode?: D,\n\tcontext?: C,\n\twrapper?: (part: ReactNode) => ReactNode,\n\toptions?: { wrapNonElementWithDefault?: boolean }\n): ReactNode\n\nexport function renderSlot<\n\tD extends DefaultLike<any>,\n\tP extends Record<string, any> = PropsOfDefault<D>,\n\tC extends Record<string, unknown> = Record<string, unknown>,\n>(args: AllProps<D, P, C>): ReactNode\n\nexport function renderSlot<\n\tD extends DefaultLike<any>,\n\tP extends Record<string, any> = PropsOfDefault<D>,\n\tC extends Record<string, unknown> = Record<string, unknown>,\n>(bespoke: Renderable<P, C>, args: Omit<AllProps<D, P, C>, 'bespoke'>): ReactNode\n\nexport function renderSlot<\n\tD extends DefaultLike<any>,\n\tP extends Record<string, any> = PropsOfDefault<D>,\n\tC extends Record<string, unknown> = Record<string, unknown>,\n>(\n\tbespoke: Renderable<P, C>,\n\tdefNode: ReactNode | ComponentType<P>,\n\targs: Omit<AllProps<D, P, C>, 'bespoke' | 'default'>\n): ReactNode\n\nexport function renderSlot<\n\tD extends DefaultLike<any>,\n\tP extends Record<string, any> = PropsOfDefault<D>,\n\tC extends Record<string, unknown> = Record<string, unknown>,\n>(\n\tbespoke: Renderable<P, C>,\n\tdefNode: ReactNode | ComponentType<P>,\n\tcontext: C,\n\targs: Omit<AllProps<D, P, C>, 'bespoke' | 'default' | 'context'>\n): ReactNode\n\nexport function renderSlot(...args: any[]): ReactNode {\n\tswitch (args.length) {\n\t\tcase 1:\n\t\t\treturn renderSlotWithObject(args[0])\n\t\tcase 2:\n\t\t\treturn renderSlotWithObject({\n\t\t\t\tbespoke: args[0],\n\t\t\t\t...(isPlainObject(args[1]) && !isValidElement(args[1])\n\t\t\t\t\t? args[1]\n\t\t\t\t\t: { default: args[1] }),\n\t\t\t})\n\t\tcase 3:\n\t\t\treturn renderSlotWithObject({\n\t\t\t\tbespoke: args[0],\n\t\t\t\tdefault: args[1],\n\t\t\t\t...('context' in args[2] || 'wrapper' in args[2] || 'options' in args[2]\n\t\t\t\t\t? args[2]\n\t\t\t\t\t: { context: args[2] }),\n\t\t\t})\n\t\tcase 4:\n\t\t\treturn renderSlotWithObject({\n\t\t\t\tbespoke: args[0],\n\t\t\t\tdefault: args[1],\n\t\t\t\tcontext: args[2],\n\t\t\t\t...(isFunction(args[3]) ? { wrapper: args[3] } : args[3]),\n\t\t\t})\n\t\tcase 5:\n\t\t\treturn renderSlotWithObject({\n\t\t\t\tbespoke: args[0],\n\t\t\t\tdefault: args[1],\n\t\t\t\tcontext: args[2],\n\t\t\t\twrapper: args[3],\n\t\t\t\toptions: args[4],\n\t\t\t})\n\t}\n}\n\nfunction isObject(obj: any): obj is object {\n\treturn isPlainObject(obj)\n}\n\nfunction renderSlotWithObject<\n\tD extends DefaultLike<any>,\n\tP extends Record<string, any> = PropsOfDefault<D>,\n>({\n\tbespoke: bespokePart,\n\tdefault: defaultPart,\n\tcontext: contextPart,\n\twrapper: wrapperPart,\n\toptions: optionsPart,\n}: AllProps<D>): ReactNode {\n\tconst { wrapNonElementWithDefault } = optionsPart ?? {}\n\n\t// Don't render part at all in those three cases.\n\tif (bespokePart === undefined || bespokePart === false || bespokePart === null) {\n\t\treturn null\n\t}\n\n\tconst renderContent = (): ReactNode => {\n\t\t// Render default implementation.\n\t\tif (bespokePart === true) {\n\t\t\treturn isFunction(defaultPart)\n\t\t\t\t? createElement(defaultPart, {} as P)\n\t\t\t\t: ((defaultPart ?? null) as ReactNode)\n\t\t}\n\n\t\t// If a function is passed, render it with the default part.\n\t\tif (isFunction(bespokePart)) {\n\t\t\treturn bespokePart(\n\t\t\t\tisFunction(defaultPart)\n\t\t\t\t\t? defaultPart\n\t\t\t\t\t: isValidElement(defaultPart)\n\t\t\t\t\t\t? (props) => cloneElement(defaultPart, props as P)\n\t\t\t\t\t\t: () => null,\n\t\t\t\tcontextPart ?? {}\n\t\t\t)\n\t\t}\n\n\t\t// Handle additional options.\n\t\tif (wrapNonElementWithDefault && !isObject(bespokePart)) {\n\t\t\tconst props = { children: bespokePart, ...(contextPart ?? {}) } as unknown as P\n\n\t\t\treturn isFunction(defaultPart)\n\t\t\t\t? createElement(defaultPart, props)\n\t\t\t\t: isValidElement(defaultPart)\n\t\t\t\t\t? cloneElement(defaultPart, props)\n\t\t\t\t\t: null\n\t\t}\n\n\t\t// If an object configuration was passed (defaultPart props).\n\t\tif (isObject(bespokePart) && !isValidElement(bespokePart)) {\n\t\t\treturn isFunction(defaultPart)\n\t\t\t\t? createElement(defaultPart, bespokePart)\n\t\t\t\t: isValidElement(defaultPart)\n\t\t\t\t\t? cloneElement(defaultPart, bespokePart)\n\t\t\t\t\t: null\n\t\t}\n\n\t\t// In the case of any different React node, just return the value.\n\t\treturn bespokePart as ReactNode\n\t}\n\n\t// Wrap everything if needed.\n\treturn wrapperPart ? wrapperPart(renderContent()) : renderContent()\n}\n"],"mappings":"0jBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,gBAAAE,IAAA,eAAAC,EAAAH,GCCA,IAAAI,EAAuB,kCACvBA,EAA0B,qCAE1BC,EAQO,iBAuHA,SAASC,KAAcC,EAAwB,CACrD,OAAQA,EAAK,OAAQ,CACpB,IAAK,GACJ,OAAOC,EAAqBD,EAAK,CAAC,CAAC,EACpC,IAAK,GACJ,OAAOC,EAAqB,CAC3B,QAASD,EAAK,CAAC,EACf,MAAI,EAAAE,SAAcF,EAAK,CAAC,CAAC,GAAK,IAAC,kBAAeA,EAAK,CAAC,CAAC,EAClDA,EAAK,CAAC,EACN,CAAE,QAASA,EAAK,CAAC,CAAE,CACvB,CAAC,EACF,IAAK,GACJ,OAAOC,EAAqB,CAC3B,QAASD,EAAK,CAAC,EACf,QAASA,EAAK,CAAC,EACf,GAAI,YAAaA,EAAK,CAAC,GAAK,YAAaA,EAAK,CAAC,GAAK,YAAaA,EAAK,CAAC,EACpEA,EAAK,CAAC,EACN,CAAE,QAASA,EAAK,CAAC,CAAE,CACvB,CAAC,EACF,IAAK,GACJ,OAAOC,EAAqB,CAC3B,QAASD,EAAK,CAAC,EACf,QAASA,EAAK,CAAC,EACf,QAASA,EAAK,CAAC,EACf,MAAI,EAAAG,SAAWH,EAAK,CAAC,CAAC,EAAI,CAAE,QAASA,EAAK,CAAC,CAAE,EAAIA,EAAK,CAAC,CACxD,CAAC,EACF,IAAK,GACJ,OAAOC,EAAqB,CAC3B,QAASD,EAAK,CAAC,EACf,QAASA,EAAK,CAAC,EACf,QAASA,EAAK,CAAC,EACf,QAASA,EAAK,CAAC,EACf,QAASA,EAAK,CAAC,CAChB,CAAC,CACH,CACD,CAEA,SAASI,EAASC,EAAyB,CAC1C,SAAO,EAAAH,SAAcG,CAAG,CACzB,CAEA,SAASJ,EAGP,CACD,QAASK,EACT,QAASC,EACT,QAASC,EACT,QAASC,EACT,QAASC,CACV,EAA2B,CAC1B,GAAM,CAAE,0BAAAC,CAA0B,EAAID,GAAe,CAAC,EAGtD,GAAIJ,IAAgB,QAAaA,IAAgB,IAASA,IAAgB,KACzE,OAAO,KAGR,IAAMM,EAAgB,IAAiB,CAEtC,GAAIN,IAAgB,GACnB,SAAO,EAAAH,SAAWI,CAAW,KAC1B,iBAAcA,EAAa,CAAC,CAAM,EAChCA,GAAe,KAIrB,MAAI,EAAAJ,SAAWG,CAAW,EACzB,OAAOA,KACN,EAAAH,SAAWI,CAAW,EACnBA,KACA,kBAAeA,CAAW,EACxBM,MAAU,gBAAaN,EAAaM,CAAU,EAC/C,IAAM,KACVL,GAAe,CAAC,CACjB,EAID,GAAIG,GAA6B,CAACP,EAASE,CAAW,EAAG,CACxD,IAAMO,EAAQ,CAAE,SAAUP,EAAa,GAAIE,GAAe,CAAC,CAAG,EAE9D,SAAO,EAAAL,SAAWI,CAAW,KAC1B,iBAAcA,EAAaM,CAAK,KAChC,kBAAeN,CAAW,KACzB,gBAAaA,EAAaM,CAAK,EAC/B,IACL,CAGA,OAAIT,EAASE,CAAW,GAAK,IAAC,kBAAeA,CAAW,KAChD,EAAAH,SAAWI,CAAW,KAC1B,iBAAcA,EAAaD,CAAW,KACtC,kBAAeC,CAAW,KACzB,gBAAaA,EAAaD,CAAW,EACrC,KAIEA,CACR,EAGA,OAAOG,EAAcA,EAAYG,EAAc,CAAC,EAAIA,EAAc,CACnE","names":["index_exports","__export","renderSlot","__toCommonJS","import_lodash","import_react","renderSlot","args","renderSlotWithObject","isPlainObject","isFunction","isObject","obj","bespokePart","defaultPart","contextPart","wrapperPart","optionsPart","wrapNonElementWithDefault","renderContent","props"]}